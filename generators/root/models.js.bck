var generators = [];

generators.push({
    name: 'model',
    version: '0.1',
    code: function(data, templates) {

        // generate the initial mongoose Schema from fields.
        data.schemaCode = templates.schema({fields: data.fields});
        data.fields = undefined; // we dont need this anymore.

        // generate the main model code.
        return { name: data.name, code: templates.main(data)};
    },
    templates: {
        schema: "new Schema({\n\
<% for (var i = 0; i < fields.length; i ++) %>\n\
    name: '<%= fields[i].name %>',\n\
    type: '<%= fields[i].type %>',\n\
<% } %>\n\
})",
        main: "var mongoose = require('mongoose');\n\
mongoose.connect(process.env.MONGO_ADDR);\n\
\n\
var Schema = mongoose.Schema;\n\
\n\
\n\
var <%= name %>Schema = <%= schemaCode %>;\n\
\n\
<% for(var index in instancemethods) { %>\n\
<% var im = instancemethods[index]; %>\n\
<%= name %>Schema.methods.<%= im.name %> = <%= im.code %>;\n\
<% } %>\n\
\n\
<% for(var index in staticmethods) { %>\n\
<% var sm = staticmethods[index]; %>\n\
<%= name %>Schema.statics.<%= sm.name %> = <%= sm.code %>;\n\
<% } %>\n\
\n\
<% for(var index in schemaMods) { %>\n\
<% var sm = schemaMods[index]; %>\n\
(<%= sm %>)(<%= name %>Schema);\n\
<% } %>\n\
\n\
exports.<%= name %> = mongoose.model('<%= name %>', <%= name %>Schema);\n"
    }
});

exports.generators = generators;
